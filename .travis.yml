sudo: required
dist: trusty
language: cpp

compiler:
  - gcc
  - clang

env:
  - AUDIO_BACKEND="Pulseaudio"
  - AUDIO_BACKEND="Portaudio"
  - AUDIO_BACKEND="Gr-audio"

before_install:
  - sudo add-apt-repository -y ppa:bladerf/bladerf
  - sudo add-apt-repository -y ppa:ettusresearch/uhd
  - sudo add-apt-repository -y ppa:myriadrf/drivers
  - sudo add-apt-repository -y ppa:myriadrf/gnuradio
  - sudo apt-get update -qq
  - sudo apt-get install -y cmake qt5-default libqt5svg5-dev libboost-dev libpulse-dev portaudio19-dev liblog4cpp5-dev gnuradio-dev gr-osmosdr gr-fcdproplus

script:
  - mkdir build
  - cd build
  - cmake -DLINUX_AUDIO_BACKEND:STRING="$AUDIO_BACKEND" ..
  - make
  - cd ..
  # get appimage tools
  - wget -c -nv "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
  - wget -c -nv "https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage"
  - wget -c -nv "https://github.com/linuxdeploy/linuxdeploy-plugin-appimage/releases/download/continuous/linuxdeploy-plugin-appimage-x86_64.AppImage"
  - chmod a+x *.AppImage
  # Set the VERSION var to the more logical choice: tag version if tagged build, git version + commit id if no tag
  - if [ -z "$TRAVIS_TAG" ] ; then export VERSION=`git describe --abbrev=8`; else export VERSION="$TRAVIS_TAG"; fi
  # appimage creation
  - ./linuxdeploy-x86_64.AppImage -d gqrx.desktop -e build/src/gqrx -i ./resources/icons/gqrx.svg -p qt --output appimage --appdir=./AppDir
  # check list
  - ls -lh

after_success:
  # only on non tagged builds, aka continous builds
  # see https://github.com/probonopd/uploadtool#usage for instructions on steps to do with travis & github for this to work
  if [ -z "$TRAVIS_TAG" ] ; then wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh ; bash upload.sh Gqrx-*.AppImage ; fi

# deploy to Github
deploy:
  # deploy on linux
  # see https://github.com/probonopd/uploadtool#usage for instructions on steps to do with travis & github for this to work
  - provider: releases
    api_key: $GITHUB_TOKEN
    file_glob: true
    draft: true
    overwrite: true
    skip_cleanup: true
    on:
      tags: true
    file:
      - "Gqrx-*.AppImage"
